language: python
python:
  - "2.7"
env:
  - NET_SNMP_VERSION=5.7.3
cache: pip
services:
  - mysql
before_install:
  # Make localhost a FQDN :/
  - sudo sh -c 'echo "127.0.0.1 localhost." >> /etc/hosts'
  # Install build dependencies
  - sudo apt-get update
  - sudo apt-get install -y autoconf libtool make libperl-dev python-dev
  # Download and extract the required version of Net-SNMP
  - wget http://downloads.sourceforge.net/sourceforge/net-snmp/net-snmp-$NET_SNMP_VERSION.tar.gz
  - tar zxvf net-snmp-$NET_SNMP_VERSION.tar.gz
  - cd net-snmp-$NET_SNMP_VERSION
  # Build and install Net-SNMP
  - autoreconf -f -i
  - ./configure
    --prefix=/usr/local
    --enable-ucd-snmp-compatibility
    --enable-ipv6
    --with-default-snmp-version="3"
    --with-sys-contact="root@localhost"
    --with-sys-location="Unknown"
    --with-logfile="/var/log/snmpd.log"
    --with-mib-modules="host misc/ipfwacc ucd-snmp/diskio tunnel ucd-snmp/dlmod"
    --with-persistent-directory="/var/net-snmp"
    --with-libdir=lib64
    -lcrypto -lm
  - make -j4 NETSNMP_DONT_CHECK_VERSION=1 LIBS="-lcrypto"
  - sudo make install
  - sudo ldconfig
  - cd ..
  # Clean up the extracted files
  - rm -rf net-snmp-$NET_SNMP_VERSION
  # Display the build version of Net-SNMP
  - net-snmp-config --version
  # Create MySQL database
  - mysql -e 'CREATE DATABASE IF NOT EXISTS dnsupdate;'
  # Install snmpd for testing stuff...
  - sudo apt-get install -y snmpd
  - sudo cp test/system/snmp/snmpd.conf /etc/snmp/snmpd.conf
  - sudo service snmpd restart
  # Network bullshit
  - sudo ifconfig lo:1 192.0.2.22
  # BIND dns server
  - sudo apt-get install -y bind9 bind9utils bind9-doc
  - sudo cp test/system/bind/bind9 /etc/default/bind9
  - sudo cp test/system/bind/named.conf.local /etc/bind/named.conf.local
  - sudo cp test/system/bind/192.0.2.db /etc/bind/192.0.2.db
  - sudo cp test/system/bind/domain.example.db /etc/bind/domain.example.db
  - sudo chown -R bind:bind /etc/bind
  - sudo service bind9 restart
install:
  - pip install -r requirements.txt
script: python -m coverage run -m unittest discover
after_sucess:
  - echo "Code coverage stuff..."
  - coveralls
  - CODECLIMATE_REPO_TOKEN=2c0fd97f0ed7e3c76eebab55dafbd8e6158b7cc77c19ae00ca11149e3b21934d codeclimate-test-reporter
